logging:
  level:
    io.zenwave360.example: DEBUG
    org.springframework.security: DEBUG
#    org.apache.kafka: DEBUG

management.endpoints.web.exposure.include: "*"

spring:
  security:
    user:
      name: user
      password: password
      roles: USER
  data:
    mongodb:
      uri: ${MONGODB_URI}
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  cloud:
    function:
      definition: >-
        do-cancel-order;on-order-event;on-order-status-updated;on-kitchen-order-status-updated;on-delivery-status-updated;
        on-order-event-at-restaurants;on-order-status-updated-at-restaurants;
        on-order-event-at-delivery;on-order-status-updated-at-delivery;
    stream:
      bindings:
        ## Orders Module Bindings
        do-cancel-order-in-0:
          destination: orders.cancel_orders
          group: orders.consumer
        on-order-event-out-0:
          destination: orders.orders
        on-order-status-updated-out-0:
          destination: orders.order_updates
        on-kitchen-order-status-updated-in-0:
          destination: restaurants.kitchen_order_status
          group: orders.consumer
        on-delivery-status-updated-in-0:
          destination: delivery.delivery_status
          group: orders.consumer

        ## Restaurants Module Bindings
        on-order-event-at-restaurants-in-0:
          destination: orders.orders
          group: restaurants.consumer
        on-order-status-updated-at-restaurants-in-0:
          destination: orders.order_updates
          group: restaurants.consumer
        on-kitchen-order-status-updated-out-0:
          destination: restaurants.kitchen_order_status

        ## Delivery Module Bindings
        on-order-event-at-delivery-in-0:
          destination: orders.orders
          group: delivery.consumer
        on-order-status-updated-at-delivery-in-0:
          destination: orders.order_updates
          group: delivery.consumer
        on-delivery-status-updated-out-0:
          destination: delivery.delivery_status
