logging:
  level:
    io.zenwave360.example: DEBUG
    org.springframework.security: DEBUG
#    org.apache.kafka: DEBUG

management.endpoints.web.exposure.include: "*"

spring:
  security:
    user:
      name: user
      password: password
      roles: USER
  data:
    mongodb:
      uri: ${MONGODB_URI}
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  cloud:
    function:
      definition: >-
        on-order-event;on-order-status-updated;do-cancel-order;restaurants_on-order-event;
        restaurants_on-order-status-updated;
        delivery_on-order-event;delivery_on-order-status-updated;
    stream:
      bindings:
        do-cancel-order-in-0:
          destination: orders.cancel_orders
          group: orders-consumer-0
        on-order-event-out-0:
          destination: orders.orders
        on-order-status-updated-out-0:
          destination: orders.order_updates

        restaurants_on-order-event-in-0:
          destination: orders.orders
          group: restaurants_consumer
        restaurants_on-order-status-updated-in-0:
          destination: orders.order_updates
          group: restaurants_consumer

        delivery_on-order-event-in-0:
          destination: orders.orders
          group: delivery_consumer
        delivery_on-order-status-updated-in-0:
          destination: orders.order_updates
          group: delivery_consumer
