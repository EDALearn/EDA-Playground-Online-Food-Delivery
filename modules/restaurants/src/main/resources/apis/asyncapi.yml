asyncapi: 3.0.0
info:
  title: "ZenWave Online Food Delivery - Restaurants Module"
  version: 0.0.1
  tags:
    - name: "Default"
    - name: "RestaurantBackOffice"
    - name: "RestaurantOrders"

defaultContentType: application/json

channels:
  KitchenOrdersChannel:
    address: "kitchen-orders-topic"
    messages:
      KitchenOrderCreatedEventMessage:
        $ref: '#/components/messages/KitchenOrderCreatedEventMessage'
      KitchenOrderRejectedEventMessage:
        $ref: '#/components/messages/KitchenOrderRejectedEventMessage'
  KitchenOrdersStatusChannel:
    address: "kitchen-orders-status-topic"
    messages:
      KitchenOrderStatusUpdatedEventMessage:
        $ref: '#/components/messages/KitchenOrderStatusUpdatedEventMessage'

operations:
  onCreateKitchenOrderKitchenOrderCreatedEvent:
    action: send
    tags:
      - name: RestaurantOrders
    channel:
      $ref: '#/channels/KitchenOrdersChannel'
  onCreateKitchenOrderKitchenOrderRejectedEvent:
    action: send
    tags:
      - name: RestaurantOrders
    channel:
      $ref: '#/channels/KitchenOrdersChannel'
  onUpdateKitchenOrderStatusKitchenOrderStatusUpdatedEvent:
    action: send
    tags:
      - name: RestaurantOrders
    channel:
      $ref: '#/channels/KitchenOrdersStatusChannel'


components:
  messages:
    KitchenOrderCreatedEventMessage:
      messageId: KitchenOrderCreatedEventMessage
      name: KitchenOrderCreatedEventMessage
      title: 
      summary: 
      schemaFormat: application/vnd.aai.asyncapi;version=3.0.0
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        $ref: "#/components/schemas/KitchenOrderCreatedEvent"
    KitchenOrderRejectedEventMessage:
      messageId: KitchenOrderRejectedEventMessage
      name: KitchenOrderRejectedEventMessage
      title: 
      summary: 
      schemaFormat: application/vnd.aai.asyncapi;version=3.0.0
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        $ref: "#/components/schemas/KitchenOrderRejectedEvent"
    KitchenOrderStatusUpdatedEventMessage:
      messageId: KitchenOrderStatusUpdatedEventMessage
      name: KitchenOrderStatusUpdatedEventMessage
      title: 
      summary: 
      schemaFormat: application/vnd.aai.asyncapi;version=3.0.0
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        $ref: "#/components/schemas/KitchenOrderStatusUpdatedEvent"

  messageTraits:
    CommonHeaders:
      headers:
        type: object
        properties:
          kafka_messageKey:
            type: string
            description: This header value will be populated automatically at runtime
            x-runtime-expression: $message.payload#/id
          tracingId:
            type: string
            description: This header value will be populated automatically at runtime
            x-runtime-expression: $tracingIdSupplier

  schemas:
    KitchenOrderCreatedEvent:
      type: "object"
      x-business-entity: "KitchenOrderCreatedEvent"
      required:
      - "customerOrderId"
      - "kitchenOrderId"
      - "kitchenOrder"
      properties:
        customerOrderId:
          type: "string"
        kitchenOrderId:
          type: "string"
        kitchenOrder:
          $ref: "#/components/schemas/KitchenOrder"
    KitchenOrderRejectedEvent:
      type: "object"
      x-business-entity: "KitchenOrderRejectedEvent"
      required:
      - "customerOrderId"
      - "reason"
      properties:
        customerOrderId:
          type: "string"
        reason:
          type: "string"
    KitchenOrderStatusUpdatedEvent:
      type: "object"
      x-business-entity: "KitchenOrderStatusUpdatedEvent"
      required:
      - "customerOrderId"
      - "kitchenOrderId"
      - "status"
      - "operatorName"
      properties:
        customerOrderId:
          type: "string"
        kitchenOrderId:
          type: "string"
        status:
          $ref: "#/components/schemas/KitchenOrderStatus"
        operatorName:
          type: "string"
    KitchenOrder:
      type: "object"
      x-business-entity: "KitchenOrder"
      required:
      - "restaurant"
      - "date"
      - "items"
      - "status"
      properties:
        id:
          type: "String"
        restaurant:
          $ref: "#/components/schemas/Restaurant"
        date:
          type: "string"
        items:
          type: "array"
          items:
            $ref: "#/components/schemas/MenuItem"
        status:
          $ref: "#/components/schemas/KitchenOrderStatus"
        customer:
          $ref: "#/components/schemas/CustomerDetails"
    Restaurant:
      type: "object"
      x-business-entity: "Restaurant"
      required:
      - "name"
      - "phone"
      properties:
        id:
          type: "String"
        name:
          type: "string"
          minLength: 2
          maxLength: 250
        phone:
          type: "string"
        address:
          $ref: "#/components/schemas/Address"
    KitchenOrderStatus:
      type: "string"
      x-business-entity: "KitchenOrderStatus"
      enum:
      - "RECEIVED"
      - "IN_PROGRESS"
      - "READY"
      - "DELIVERED"
    Address:
      type: "object"
      x-business-entity: "Address"
      required:
      - "street"
      - "city"
      - "state"
      - "zip"
      properties:
        street:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        zip:
          type: "string"
    MenuItem:
      type: "object"
      x-business-entity: "MenuItem"
      required:
      - "restaurant"
      - "name"
      - "price"
      properties:
        id:
          type: "String"
        restaurant:
          $ref: "#/components/schemas/Restaurant"
        name:
          type: "string"
          minLength: 2
          maxLength: 250
        description:
          type: "string"
        price:
          type: "number"
          format: "double"
    CustomerDetails:
      type: "object"
      x-business-entity: "CustomerDetails"
      required:
      - "name"
      - "phone"
      properties:
        name:
          type: "string"
        phone:
          type: "string"
        address:
          $ref: "#/components/schemas/CustomerAddress"
    CustomerAddress:
      type: "object"
      x-business-entity: "CustomerAddress"
      required:
      - "street"
      - "city"
      - "state"
      - "zip"
      properties:
        street:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        zip:
          type: "string"

