asyncapi: 3.0.0
info:
  title: "ZenWave Online Food Delivery - Restaurants Module"
  version: 0.0.1
  tags:
    - name: "Default"
    - name: "RestaurantBackOffice"
    - name: "RestaurantOrders"

defaultContentType: application/json

channels:
  KitchenOrdersStatusChannel:
    address: "restaurants.kitchen_order_status"
    messages:
      KitchenOrderStatusUpdatedMessage:
        $ref: '#/components/messages/KitchenOrderStatusUpdatedMessage'
# client channels
  OrdersChannel:
    address: "orders.orders"
    messages:
      OrderEventMessage:
        $ref: '#/components/messages/OrderEventMessage'
  OrderUpdatesChannel:
    address: "orders.order_updates"
    messages:
      OrderStatusUpdatedMessage:
        $ref: '#/components/messages/OrderStatusUpdatedMessage'

operations:
  onKitchenOrderStatusUpdated:
    action: send
    tags:
      - name: RestaurantOrders
    channel:
      $ref: '#/channels/KitchenOrdersStatusChannel'
# client operations
  onOrderEvent:
    action: receive
    tags:
      - name: Orders
    channel:
      $ref: '#/channels/OrdersChannel'
  onOrderStatusUpdated:
    action: receive
    tags:
      - name: Orders
    channel:
      $ref: '#/channels/OrderUpdatesChannel'

components:
  messages:
    KitchenOrderStatusUpdatedMessage:
      name: KitchenOrderStatusUpdatedMessage
      title: ""
      summary: ""
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        schemaFormat: application/vnd.aai.asyncapi;version=3.0.0
        schema:
          $ref: "#/components/schemas/KitchenOrderStatusUpdated"
# client messages
    OrderEventMessage:
      name: OrderEventMessage
      title: ""
      summary: ""
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        schemaFormat: application/vnd.aai.asyncapi;version=3.0.0
        schema:
          $ref: "#/components/schemas/OrderEvent"
    OrderStatusUpdatedMessage:
      name: OrderStatusUpdatedMessage
      title: ""
      summary: ""
      traits:
        - $ref: '#/components/messageTraits/CommonHeaders'
      payload:
        schemaFormat: application/vnd.aai.asyncapi;version=3.0.0
        schema:
          $ref: "#/components/schemas/OrderStatusUpdated"

  messageTraits:
    CommonHeaders:
      headers:
        type: object
        properties:
          tracingId:
            type: string
            description: This header value will be populated automatically at runtime (when using ZenWave code generator)
            x-runtime-expression: $tracingIdSupplier

  schemas:
    KitchenOrderStatusUpdated:
      type: "object"
      x-business-entity: "KitchenOrderStatusUpdated"
      required:
      - "customerOrderId"
      - "kitchenOrderId"
      - "status"
      properties:
        customerOrderId:
          type: "string"
        kitchenOrderId:
          type: "string"
        status:
          $ref: "#/components/schemas/KitchenOrderStatus"
        message:
          type: "string"
    KitchenOrderStatus:
      type: "string"
      x-business-entity: "KitchenOrderStatus"
      enum:
      - "ACCEPTED"
      - "REJECTED"
      - "IN_PROGRESS"
      - "READY"
      - "DELIVERED"
      - "CANCELLED"

# client schemas
    OrderEvent:
      type: "object"
      x-business-entity: "OrderEvent"
      properties:
        orderTime:
          type: "string"
          format: "date-time"
        status:
          $ref: "#/components/schemas/OrderStatus"
        customerDetails:
          $ref: "#/components/schemas/Customer"
        restaurantDetails:
          $ref: "#/components/schemas/Restaurant"
        orderItems:
          type: "array"
          items:
            $ref: "#/components/schemas/OrderItem"
        id:
          type: "string"
    OrderStatusUpdated:
      type: "object"
      x-business-entity: "OrderStatusUpdated"
      properties:
        id:
          type: "string"
        dateTime:
          type: "string"
          format: "date-time"
        status:
          $ref: "#/components/schemas/OrderStatus"
        previousStatus:
          $ref: "#/components/schemas/OrderStatus"
    CancelOrderInput:
      type: "object"
      x-business-entity: "CancelOrderInput"
      properties:
        id:
          type: "string"
        reason:
          type: "string"
    Restaurant:
      type: "object"
      x-business-entity: "Restaurant"
      required:
        - "restaurantId"
        - "name"
        - "phone"
      properties:
        restaurantId:
          type: "string"
        name:
          type: "string"
        phone:
          type: "string"
        addresses:
          $ref: "#/components/schemas/Address"
    OrderStatus:
      type: "string"
      x-business-entity: "OrderStatus"
      enum:
        - "RECEIVED"
        - "KITCHEN_ACCEPTED"
        - "DELIVERY_ACCEPTED"
        - "CONFIRMED"
        - "KITCHEN_IN_PROGRESS"
        - "KITCHEN_READY"
        - "KITCHEN_DELIVERED"
        - "ON_DELIVERY"
        - "DELIVERED"
        - "CANCELLED"
    Address:
      type: "object"
      x-business-entity: "Address"
      required:
        - "street"
      properties:
        street:
          type: "string"
        city:
          type: "string"
        state:
          type: "string"
        zip:
          type: "string"
    Customer:
      type: "object"
      x-business-entity: "Customer"
      required:
        - "customerId"
        - "firstName"
        - "lastName"
        - "email"
        - "phone"
      properties:
        customerId:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
        email:
          type: "string"
        phone:
          type: "string"
        address:
          $ref: "#/components/schemas/Address"
    OrderItem:
      type: "object"
      x-business-entity: "OrderItem"
      required:
        - "menuItemId"
        - "name"
        - "price"
        - "quantity"
      properties:
        menuItemId:
          type: "string"
        name:
          type: "string"
        description:
          type: "string"
        price:
          type: "number"
          format: "double"
        quantity:
          type: "integer"
          format: "int32"
